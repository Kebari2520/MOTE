#given prime type= other, task type= name, and DV=SOA1200
#fancy code to set the working directory to the current folder
setwd("~/GitHub/SPP-Analysis")
spp.data=read.csv("itemdata.csv")
#next, we need to split the data up so that we are only analyzing for our prime and task type
#we have prime type OTHER
spp.data.other=spp.data[spp.data$relation=="other",] #this keeps only rows where relation=other and keeps all columns
#we have task type LDT
spp.data.other.name=spp.data.other[spp.data.other$task=="NAME",] #this keeps only rows where task=NAME and keeps all columns
#now we can run our regressions
#our first step is to use these lexical variables to predict our DV
#remember there are 2 possible DV columns, since we have DV=SOA1200, we will predict that variable
model.1=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr,
data=spp.data.other.name) #make sure this data name is correct for your data
summary(model.1) #this will give us information about our model.
#2a swowfsg added now
model.2a=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+swowfsg,
data=spp.data.other.name)
summary(model.2a)
#2b pmi_swow added now
model.2b=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+pmi_swow,
data=spp.data.other.name)
summary(model.2b)
summary(model.2a)
#2b pmi_swow added now
model.2b=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+pmi_swow,
data=spp.data.other.name)
summary(model.2b)
#2c swowfsg and pmi_swow together
model.2c=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+swowfsg+pmi_swow,
data=spp.data.other.name)
summary(model.2c)
#IF swowfsg is the better predictor, OR all models equal, use this model
model.2.2a=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+
swowfsg+swow.t.fsg_ss+ swow.p.fsg_ss+ swow.t.fan_ss+ swow.p.fan_ss,
data=spp.data.other.name)
summary(model.2.2a)
#IF model swowfsg won above, OR  models tied, use these two models
model.3a.a=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+
swowfsg+swow.t.fsg_ss+ swow.p.fsg_ss+ swow.t.fan_ss+ swow.p.fan_ss+full_cos_final,
data=spp.data.other.name)
model.3a.b=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+
swowfsg+swow.t.fsg_ss+ swow.p.fsg_ss+ swow.t.fan_ss+ swow.p.fan_ss+pmi_cosine,
data=spp.data.other.name)
model.3a.c=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+
swowfsg+swow.t.fsg_ss+ swow.p.fsg_ss+ swow.t.fan_ss+ swow.p.fan_ss+full_cos_final+pmi_cosine,
data=spp.data.other.name)
summary(model.3a.a)
summary(model.3a.b)
#3.2-Cosine set size p.css, t.css, p.fss, t.fss
#IF model 3a.a won above, use this model
model.3.2a.a=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+
swowfsg+swow.t.fsg_ss+ swow.p.fsg_ss+ swow.t.fan_ss+ swow.p.fan_ss+full_cos_final+
p.css+t.css+p.fss+t.fss,
data=spp.data.other.name)
summary(model.3.2a.a)
summary(model.3a.b)
summary(model.3a.c)
#3.2-Cosine set size p.css, t.css, p.fss, t.fss
#IF model 3a.a won above, use this model
model.3.2a.a=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+
swowfsg+swow.t.fsg_ss+ swow.p.fsg_ss+ swow.t.fan_ss+ swow.p.fan_ss+full_cos_final+
p.css+t.css+p.fss+t.fss,
data=spp.data.other.name)
summary(model.3.2a.a)
#4th-thematics; association and semantic relationships take together.
#distance, LSA, beagle
#IF model 3a.a won above, use this model
model.4a.a=lm(SOA1200~p.freq+t.freq+t.length+p.length+p.orthoN+t.orthoN+p.phonoN+t.phonoN+p.POSr+t.POSr+
swowfsg+swow.t.fsg_ss+ swow.p.fsg_ss+ swow.t.fan_ss+ swow.p.fan_ss+full_cos_final+
p.css+t.css+p.fss+t.fss+distance+LSA+beagle,
data=spp.data.other.name)
summary(model.4a.a)
##set working direction to create stuff
setwd("~/Downloads")
setwd("~/GitHub/MOTE")
##run this thing
library(roxygen2)
roxygen2::roxygenise()
##then run this to update
devtools::install_github("doomlab/MOTE")
