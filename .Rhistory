summary(medmodel1.tt)
##path a
medmodel2.tt = lme(average ~ zq15 + People,
data = reduced[ reduced$type == "Tenure Track", ],
method = "ML",
na.action = "na.omit",
random = ~1|instructcode)
summary(medmodel2.tt)
##path b, c'
medmodel3.tt = lme(q1 ~ zq15 + zaverage + People,
data = reduced[ reduced$type == "Tenure Track", ],
method = "ML",
na.action = "na.omit",
random = ~1|instructcode)
summary(medmodel3.tt)
#aroian sobel
a = coef(medmodel2.tt)[1,2]
b = coef(medmodel3.tt)[1,3]
SEa = summary(medmodel2.tt)$tTable[2,2]
SEb = summary(medmodel3.tt)$tTable[3,2]
zscore.tt =  (a*b)/(sqrt((b^2*SEa^2)+(a^2*SEb^2)+(SEa*SEb)))
bootresults.tt = boot(data = reduced[ reduced$type == "Tenure Track", ],
statistic = indirectsaved,
R = nsims)
tableprint = matrix(NA, nrow = 16, ncol = 5)
colnames(tableprint) = c("$b$", "$SE$", "$df$", "$t$", "$p$")
(summary(medmodel1.ta)$tTable[-1, ]
)
unname(summary(medmodel1.ta)$tTable[-c(1,3), ])
summary(medmodel3.ta)$tTable
summary(medmodel2.ta)$tTable[-c(1,3), ]
summary(medmodel2.ta)$tTable
tableprint = matrix(NA, nrow = 16, ncol = 5)
colnames(tableprint) = c("$b$", "$SE$", "$df$", "$t$", "$p$")
tableprint[1, ] = unname(summary(medmodel1.ta)$tTable[-c(1,3), ])
tableprint[2, ] = unname(summary(medmodel2.ta)$tTable[-c(1,3), ])
tableprint[3:4, ] = unname(summary(medmodel3.ta)$tTable[-c(1,4), ])
tableprint[5, ] = unname(summary(medmodel1.pc)$tTable[-c(1,3), ])
tableprint[6, ] = unname(summary(medmodel2.pc)$tTable[-c(1,3), ])
tableprint[7:8, ] = unname(summary(medmodel3.pc)$tTable[-c(1,4), ])
tableprint[9, ] = unname(summary(medmodel1.in)$tTable[-c(1,3), ])
tableprint[10, ] = unname(summary(medmodel2.in)$tTable[-c(1,3), ])
tableprint[11:12, ] = unname(summary(medmodel3.in)$tTable[-c(1,4), ])
tableprint[13, ] = unname(summary(medmodel1.tt)$tTable[-c(1,3), ])
tableprint[14, ] = unname(summary(medmodel2.tt)$tTable[-c(1,3), ])
tableprint[15:16, ] = unname(summary(medmodel3.tt)$tTable[-c(1,4), ])
tableprint = cbind(
"Group" = c(rep("Teaching Assistant", 4),
rep("Per-Course", 4),
rep("Instructor", 4),
rep("Tenure Track", 4)),
"DV" = c("Overall Course", "Average Grading", "Overall Course", "Overall Course"),
"IV" = c("Expected Grade", "Expected Grade", "Expected Grade", "Average Grading"),
tableprint
)
View(tableprint)
tableprint[ , c(4,5,7)] = printnum(as.numeric(tableprint[ , c(3,4,6)]), digits = 3)
tableprint[ , 8] = printp(as.numeric(tableprint[ , 8]))
tableprint = matrix(NA, nrow = 16, ncol = 5)
colnames(tableprint) = c("$b$", "$SE$", "$df$", "$t$", "$p$")
tableprint[1, ] = unname(summary(medmodel1.ta)$tTable[-c(1,3), ])
tableprint[2, ] = unname(summary(medmodel2.ta)$tTable[-c(1,3), ])
tableprint[3:4, ] = unname(summary(medmodel3.ta)$tTable[-c(1,4), ])
tableprint[5, ] = unname(summary(medmodel1.pc)$tTable[-c(1,3), ])
tableprint[6, ] = unname(summary(medmodel2.pc)$tTable[-c(1,3), ])
tableprint[7:8, ] = unname(summary(medmodel3.pc)$tTable[-c(1,4), ])
tableprint[9, ] = unname(summary(medmodel1.in)$tTable[-c(1,3), ])
tableprint[10, ] = unname(summary(medmodel2.in)$tTable[-c(1,3), ])
tableprint[11:12, ] = unname(summary(medmodel3.in)$tTable[-c(1,4), ])
tableprint[13, ] = unname(summary(medmodel1.tt)$tTable[-c(1,3), ])
tableprint[14, ] = unname(summary(medmodel2.tt)$tTable[-c(1,3), ])
tableprint[15:16, ] = unname(summary(medmodel3.tt)$tTable[-c(1,4), ])
tableprint = cbind(
"Group" = c(rep("Teaching Assistant", 4),
rep("Per-Course", 4),
rep("Instructor", 4),
rep("Tenure Track", 4)),
"DV" = c("Overall Course", "Average Grading", "Overall Course", "Overall Course"),
"IV" = c("Expected Grade", "Expected Grade", "Expected Grade", "Average Grading"),
tableprint
)
tableprint[ , c(4,5,7)] = printnum(as.numeric(tableprint[ , c(4,5,7)]), digits = 3)
tableprint[ , 8] = printp(as.numeric(tableprint[ , 8]))
apa_table(tableprint,
align = c("l", "l", "l", rep("c", 5)),
caption = "t Statistics for Individual Mediations"
)
##libraries
library(ltm)
library(mirt)
?factor.scores
model <- 'latent =~ v1 + v2 + v3
stuff =~ v4+ v5 + v6'
model
model <- 'latent =~ v1 + v2 + v3
stuff =~ v4+ v5 + v6'
model
model <- 'latent =~ v1 + v2 + v3
stuff =~ v4+ v5 + v6'
model
knitr::opts_chunk$set(echo = TRUE)
master = read.csv("c2 assignment.csv")
Mmach = tapply(master$mach, list(master$psychopathy, master$group), mean)
SDmach = tapply(master$mach, list(master$psychopathy, master$group), sd)
Nmach = tapply(master$mach, list(master$psychopathy, master$group), length)
SEmach = SDmach / sqrt(Nmach)
Mmach;SDmach;Nmach;SEmach
Mcd = tapply(master$cog_dis, list(master$psychopathy, master$group), mean)
SDcd = tapply(master$cog_dis, list(master$psychopathy, master$group), sd)
Ncd = tapply(master$cog_dis, list(master$psychopathy, master$group), length)
SEcd = SDcd / sqrt(Ncd)
Mcd;SDcd;Ncd;SEcd
Mcd
Mcd
Mcd[1]
Mcd[2]
install.packages("swirl")
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
library(swilr)
library(swirl)
swirl()
library(mote)
library(MOTE)
eta.F(1,13,7.11)
#2r / sqrt (1-r2)
2*sqrt(eta.F(1,13,7.11)$eta) / sqrt(1 - eta.F(1,13,7.11)$eta)
2*sqrt(eta.F(1,23,13.71)$eta) / sqrt(1 - eta.F(1,23,13.71)$eta)
2*sqrt(eta.F(1,94,4.97)$eta) / sqrt(1 - eta.F(1,94,4.97)$eta)
2*sqrt(eta.F(3,93,5.23)$eta) / sqrt(1 - eta.F(3,93,5.23)$eta)
2*sqrt(eta.F(1,28,26.69)$eta) / sqrt(1 - eta.F(1,28,26.69)$eta)
2*sqrt(eta.F(1,21,17.3)$eta) / sqrt(1 - eta.F(1,21,17.3)$eta)
2*sqrt(eta.F(1,31,5.17)$eta) / sqrt(1 - eta.F(1,31,5.17)$eta)
2*sqrt(eta.F(1,11,4.8)$eta) / sqrt(1 - eta.F(1,11,4.8)$eta)
eta.F(1,11,4.8)$eta
?dnorm()
qnorm(.2, lower.tail = F)
library(scholar)
ids <- c("B7vSqZsAAAAJ", "qj74uXkAAAAJ")
df <- compare_scholars(ids)
View(df)
df2 <- compare_scholar_careers(ids)
View(df2)
get_num_articles(ids)
get_num_articles(ids[1])
stuff = lapply(ids, get_profile)
View(stuff)
View(df2)
ids <- c("B7vSqZsAAAAJ", "qj74uXkAAAAJ", "ReD-s38AAAAJ")
df2 <- compare_scholar_careers(ids)
View(df2)
View(stuff)
View(stuff)
temp = as.data.frame(stuff)
stuff = vapply(ids, get_profile)
stuff = vapply(ids, get_profile, "")
career <- compare_scholar_careers(ids)
View(career)
types <- c("D", "D", "M")
temp <- as.data.frame(ids, types)
View(temp)
temp <- cbind.data.frame(ids, types)
View(temp)
id <- c("B7vSqZsAAAAJ", "qj74uXkAAAAJ", "ReD-s38AAAAJ")
types <- c("D", "D", "M")
id <- c("B7vSqZsAAAAJ", "qj74uXkAAAAJ", "ReD-s38AAAAJ")
types <- c("D", "D", "M")
temp <- cbind.data.frame(id, types)
career <- compare_scholar_careers(id)
View(career)
full <- merge(career, temp, "id")
View(full)
library(ggplot2)
cleanup = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
legend.key = element_rect(fill = "white"),
text = element_text(size = 15))
View(temp)
View(full)
View(full)
ggplot(full, aes(career_year, cites, color = types)) +
cleanup +
NULL
ggplot(full, aes(career_year, cites, color = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm", color = "black") +
#xlab("Anxiety Score") +
#ylab("Exam Score") +
NULL
ggplot(full, aes(career_year, cites, color = types)) +
ggplot(full, aes(career_year, cites, color = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm", color = "black") +
xlab("Career Year")
ggplot(full, aes(career_year, cites, color = types))
ggplot(full, aes(career_year, cites, color = types)) +
cleanup +
ggplot(full, aes(career_year, cites, color = types)) +
cleanup +
geom_point()
ggplot(full, aes(career_year, cites, color = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm", color = "black")
ggplot(full, aes(career_year, cites, color = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm", color = "black") +
xlab("Career Year")
ggplot(full, aes(career_year, cites, color = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm", color = "black") +
xlab("Career Year") +
ylab("Number of Citations")
ggplot(full, aes(career_year, cites, color = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm", color = "black") +
xlab("Career Year") +
ylab("Number of Citations") +
scale_color_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
NULL
ggplot(full, aes(career_year, cites, color = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm", color = types) +
xlab("Career Year") +
ylab("Number of Citations") +
scale_color_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
NULL
ggplot(full, aes(career_year, cites, color = types, fill = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm") +
xlab("Career Year") +
ylab("Number of Citations") +
scale_color_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
NULL
ggplot(full, aes(career_year, cites, color = types, fill = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm") +
xlab("Career Year") +
ylab("Number of Citations") +
scale_color_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
scale_fill_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
NULL
stuff = lapply(ids, get_profile)
stuff = lapply(id, get_profile)
View(stuff)
stuff = sapply(id, get_profile)
View(stuff)
View(stuff)
stuff <- lapply(id, get_profile)
View(stuff)
mylist_power <- sapply(stuff, '[', 'h_index')
View(mylist_power)
mylist_power <- as.data.frame(sapply(stuff, '[', 'h_index'))
View(mylist_power)
?sapply
mylist_power <- vapply(stuff, '[', 'h_index')
mylist_power <- sapply(stuff, '[', 'h_index', simplify = "vector")
View(mylist_power)
mylist_power <- sapply(stuff, '[', 'h_index', simplify = "matrix")
View(mylist_power)
mylist_power <- sapply(stuff, '[', 'h_index', simplify = TRUE)
View(mylist_power)
mylist_power <- unlist(sapply(stuff, '[', 'h_index'))
temp$hindex <- unlist(sapply(stuff, '[', 'h_index'))
View(temp)
View(stuff)
View(stuff)
temp$i10index <- unlist(sapply(stuff, '[', 'i10_index'))
library(reshape)
names(temp)
longtemp = melt(temp,
id = c("id", "types"))
View(longtemp)
ggplot(longtemp, aes(variable, value, fill = types))
ggplot(longtemp, aes(variable, value, fill = types)) +
geom_point()
ggplot(longtemp, aes(variable, value, color = types)) +
geom_point()
ggplot(longtemp, aes(variable, value, color = types, fill = types)) +
geom_point() +
stat_summary(fun.y = mean,
geom = "bar",
position = "dodge") +
stat_summary(fun.data = mean_cl_normal,
geom = "errorbar",
position = position_dodge(width = 0.90),
width = .2)
ggplot(longtemp, aes(variable, value, color = types, fill = types)) +
geom_point() +
stat_summary(fun.y = mean,
geom = "point",
position = "dodge")
ggplot(longtemp, aes(variable, value, color = types, fill = types)) +
geom_point() +
cleanup
ggplot(longtemp, aes(variable, value, color = types, fill = types)) +
geom_point() +
cleanup +
scale_color_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
scale_fill_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
NULL
ggplot(longtemp, aes(variable, value, color = types, fill = types)) +
geom_point() +
cleanup +
scale_color_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
scale_fill_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
scale_x_discrete(name = "Metric",
labels = c("h-Index", "i10-Index")) +
NULL
ggplot(longtemp, aes(variable, value, color = types, fill = types)) +
geom_point() +
cleanup +
scale_color_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
scale_fill_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
scale_x_discrete(name = "Metric",
labels = c("h-Index", "i10-Index")) +
ylab("Score of Index") +
NULL
id <- c("_d9scVEAAAAJ", "qj74uXkAAAAJ", "ReD-s38AAAAJ")
types <- c("D", "D", "M")
temp <- cbind.data.frame(id, types)
career <- compare_scholar_careers(id)
full <- merge(career, temp, "id")
library(ggplot2)
cleanup = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
legend.key = element_rect(fill = "white"),
text = element_text(size = 15))
ggplot(full, aes(career_year, cites, color = types, fill = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm") +
xlab("Career Year") +
ylab("Number of Citations") +
scale_color_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
scale_fill_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
NULL
id <- c("_d9scVEAAAAJ", "33TqQu8AAAAJ", "ReD-s38AAAAJ", "QPH_lRIAAAAJ")
types <- c("D", "D", "M", "M")
temp <- cbind.data.frame(id, types)
career <- compare_scholar_careers(id)
full <- merge(career, temp, "id")
library(ggplot2)
cleanup = theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank(),
axis.line.x = element_line(color = "black"),
axis.line.y = element_line(color = "black"),
legend.key = element_rect(fill = "white"),
text = element_text(size = 15))
ggplot(full, aes(career_year, cites, color = types, fill = types)) +
cleanup +
geom_point() +
geom_smooth(method = "lm") +
xlab("Career Year") +
ylab("Number of Citations") +
scale_color_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
scale_fill_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
NULL
stuff <- lapply(id, get_profile)
temp$hindex <- unlist(sapply(stuff, '[', 'h_index'))
temp$i10index <- unlist(sapply(stuff, '[', 'i10_index'))
library(reshape)
longtemp = melt(temp,
id = c("id", "types"))
ggplot(longtemp, aes(variable, value, color = types, fill = types)) +
geom_point() +
cleanup +
scale_color_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
scale_fill_manual(name = "School Type",
labels = c("Doctoral", "Masters"),
values = c("red", "blue")) +
scale_x_discrete(name = "Metric",
labels = c("h-Index", "i10-Index")) +
ylab("Score of Index") +
NULL
##set working directory to datasets
setwd("~/OneDrive - Missouri State University/RESEARCH/2 projects/SPP-Analysis/datasets")
##open the item data to add to
itemdata = read.csv("itemdata.csv")
swow = read.csv("strength.SWOW-EN.R123.csv")
swow$cue = tolower(as.character(swow$cue))
swow$response = tolower(as.character(swow$response))
swow$cue = gsub(" ", "", swow$cue)
swow$response = gsub(" ", "", swow$response)
swow$cue = gsub("'", "", swow$cue)
swow$response = gsub("'", "", swow$response)
swow$index = paste(swow$cue, swow$response, sep = ".")
View(table(swow$R123))
swow = swow[swow$R123 > 3 , ]
length(table(swow$cue))
length(table(swow$response))
swow = swow[ , c("cue", "response", "R123.Strength")]
#fix into wide dataset
wideswow = dcast(swow, cue ~ response,
value.var = "R123.Strength",
fun.aggregate = mean)
library(reshape2)
#fix into wide dataset
wideswow = dcast(swow, cue ~ response,
value.var = "R123.Strength",
fun.aggregate = mean)
##set working directory to datasets
setwd("~/OneDrive - Missouri State University/RESEARCH/2 projects/SPP-Analysis/datasets")
##open the item data to add to
itemdata = read.csv("itemdata.csv")
swow = read.csv("strength.SWOW-EN.R123.csv")
swow$cue = tolower(as.character(swow$cue))
swow$response = tolower(as.character(swow$response))
swow$cue = gsub(" ", "", swow$cue)
swow$response = gsub(" ", "", swow$response)
swow$cue = gsub("'", "", swow$cue)
swow$response = gsub("'", "", swow$response)
swow$index = paste(swow$cue, swow$response, sep = ".")
#swow = swow[swow$R123 > 3 , ]
swow = swow[ , c("cue", "response", "R123.Strength")]
#figure out p(target)
View(table(swow$cue))
#figure out p(target)
ptarget = table(swow$cue)
#figure out p(target)
ptarget = as.data.frame(table(swow$cue))
sum(ptarget$Freq)
ptarget$prob = ptarget$Freq / sum(ptarget$Freq)
colnames(ptarget)[1] = "cue"
swow = merge(swow, ptarget, "cue")
View(swow[1:100, ])
options(scipen = 999)
View(swow[1:100, ])
114/1300000
?log
swow$pmi.info = log2(swow$R123.Strength / swow$prob)
View(swow[1:100,])
View(swow$R123.Strength / swow$prob)
View(swow[1:100,])
swow$index = paste(swow$cue, swow$response, ".")
itemdata$pmi_swow = vlookup(itemdata$index, swow, "pmi.info", "index")
(
library(expss)
itemdata$pmi_swow = vlookup(itemdata$index, swow, "pmi.info", "index")
View(itemdata)
itemdata$pmi_swow = vlookup(itemdata$index, swow, "pmi.info", "index")
View(swow[1:100,])
swow$index = paste(swow$cue, swow$response, sep = ".")
View(swow[1:100,])
itemdata$pmi_swow = vlookup(itemdata$index, swow, "pmi.info", "index")
a
names(itemdata)
cor(itemdata[ , 16:43], use = "pairwise.complete.obs")
cor(itemdata[ , 16:43], use = "pairwise.complete.obs") > .5
write.csv(itemdata, "itemdata.csv", row.names = F)
summary(itemdata)
names(itemdata)
library(LSAfun)
?LSAfun
??`LSAfun-package`
devtools::install_github("doomlab/MOTE")
##set your working directory to package file
setwd("~/OneDrive - Missouri State University/RESEARCH/2 projects/MOTE")
##run this thing
library(roxygen2)
roxygen2::roxygenise()
##then run this to update
devtools::install_github("doomlab/MOTE")
